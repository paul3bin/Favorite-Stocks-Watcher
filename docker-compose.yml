version: "3"

services:
  backend:
    restart: "unless-stopped"
    container_name: favorite_stock_backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - DJANGO_SUPERUSER_EMAIL=testemail@example.com
      - DJANGO_SUPERUSER_PASSWORD=testpass
      - DB_HOST=favorite_stock_db
      - DB_NAME=stock-app-db
      - DB_USER=postgres
      - DB_PASSWORD=supersecretpassword
      - DB_PORT=5432
      - REDIS_LOCATION=redis://favorite_stock_redis_cache
    ports:
      - "8000:8000"
    command: >
      sh -c "python3 setup_env.py
            python3 manage.py wait_for_db &&
            python3 manage.py migrate &&
            python3 manage.py add_test_admin&&
            python3 manage.py runserver 0.0.0.0:8000
            "
    depends_on:
      - db
      - redis

  db:
    restart: "unless-stopped"
    container_name: favorite_stock_db
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=stock-app-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    ports:
      - "5432:5432"

  redis:
    restart: "unless-stopped"
    container_name: favorite_stock_redis_cache
    image: redis:alpine
    ports:
      - "6378:6379"

  frontend:
    restart: "unless-stopped"
    command: npm start
    container_name: favorite_stock_frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
