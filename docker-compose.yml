version: "3"

services:
  backend:
    restart: "unless-stopped"
    container_name: fsw_backend
    hostname: "fsw-backend.local"
    build:
      context: ./backend/
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    command: >
      sh -c "python3 setup_env.py
            python3 manage.py wait_for_db &&
            python3 manage.py migrate &&
            python3 manage.py add_test_admin&&
            gunicorn core.wsgi:application --bind 0.0.0.0:8000
            "
    depends_on:
      - db
      - redis
    networks:
      - fsw-net

  db:
    restart: "unless-stopped"
    container_name: fsw_db
    image: postgres:11-alpine
    volumes:
      - ./postgresql:/var/lib/postgresql
    environment:
      - POSTGRES_DB=fsw_app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    ports:
      - "5432:5432"
    networks:
      - fsw-net

  redis:
    restart: "unless-stopped"
    container_name: fsw_redis_cache
    image: redis:alpine
    ports:
      - "6378:6379"
    networks:
      - fsw-net

  frontend:
    restart: "unless-stopped"
    command: npm start
    container_name: fsw_frontend
    hostname: "fsw-frontend.local"
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    environment:
      - REACT_APP_BACKEND_HOST=http://localhost:8000/
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
    networks:
      - fsw-net

networks:
  fsw-net:
    driver: bridge
